//
//  Problem0002.swift
//  ProjectEuler
//
//  Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
//	By starting with 1 and 2, the first 10 terms will be:
//
//	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//	By considering the terms in the Fibonacci sequence whose values do not exceed four million
//	find the sum of the even-valued terms.
//

import Foundation

class Problem0002 {

	func sumOfEvenFibonacciNumbersLessThan(maxNumber: Int) -> Int {
		let maxNumberMinusOne = maxNumber - 1
		let fibonacciNumbers = maxNumberMinusOne.fibonacciNumbers()
		let evenFibonacciNumbers = onlyEvenNumbers(numbers: fibonacciNumbers)

		var sum = 0
		for evenFibonacciNumber in evenFibonacciNumbers {
			sum += evenFibonacciNumber
		}

		return sum
	}

	private func onlyEvenNumbers(numbers: [Int]) -> [Int] {
		var evenNumbers = [Int]()
		for number in numbers {
			if (number % 2 == 0) {
				evenNumbers.append(number)
			}
		}

		return evenNumbers
	}
}
